start: stmt+

stmt: "print" STRING ";"                     -> print_stmt
    | NAME "=" expr ";"                      -> assign_stmt
    | "if" "(" bool_expr ")" "{" stmt+ "}" ("else" "{" stmt+ "}")? -> if_stmt
    | "while" "(" bool_expr ")" "{" stmt+ "}"                      -> while_stmt

?expr: expr "+" term                         -> add
     | expr "-" term                         -> sub
     | term

?term: term "*" factor                       -> mul
     | term "/" factor                       -> div
     | factor

?factor: NUMBER                              -> number
       | NAME                                -> var
       | "(" expr ")"

bool_expr: expr "==" expr                    -> eq
         | expr "!=" expr                    -> neq
         | expr ">" expr                     -> gt
         | expr "<" expr                     -> lt

%import common.CNAME -> NAME
%import common.NUMBER
%import common.ESCAPED_STRING -> STRING
%import common.WS
%ignore WS
